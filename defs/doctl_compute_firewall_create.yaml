#--------------------------------------------------------------------------------------------------------------
# Autogenerated by SmarterGen - do not modify this file.
#--------------------------------------------------------------------------------------------------------------
# Creates a cloud firewall. This command must contain at least one inbound or outbound access rule.
# 
# Usage:
#   doctl compute firewall create [flags]
# 
# Aliases:
#   create, c
# 
# Examples:
# The following example creates a cloud firewall named `example-firewall` that contains an inbound rule and an outbound rule and applies them to the specified Droplet: doctl compute firewall create --name "example-firewall" --inbound-rules "protocol:tcp,ports:22,droplet_id:386734086" --outbound-rules "protocol:tcp,ports:22,address:0.0.0.0/0" --droplet-ids "386734086,391669331"
# 
# Flags:
#       --droplet-ids 386734086,391669331                            A comma-separated list of Droplet IDs to place behind the cloud firewall, for example: 386734086,391669331
#       --format ID                                                  Columns for output in a comma-separated list. Possible values: ID, `Name`, `Status`, `Created`, `InboundRules`, `OutboundRules`, `DropletIDs`, `Tags`, `PendingChanges`.
#   -h, --help                                                       help for create
#       --inbound-rules protocol:tcp,ports:22,address:192.0.2.0/24   A comma-separated key-value list that defines an inbound rule. The rule must define a communication protocol, a port number, and a traffic source location, such as a Droplet ID, IP address, or a tag. For example, the following rule defines that resources can only receive TCP traffic on port 22 from addresses in the specified CIDR: protocol:tcp,ports:22,address:192.0.2.0/24. 
#                                                                    	
#                                                                    Available source keys are: `address`, `droplet_id`, `load_balancer_uid`, `kubernetes_id`, and `tag`. 
#                                                                    
#                                                                    Use a quoted string of space-separated values for multiple rules.
#       --name string                                                The firewall's name (required)
#       --no-header                                                  Return raw data with no headers
#       --outbound-rules protocol:tcp,ports:22,address:0.0.0.0/0     A comma-separate key-value list that defines an outbound rule. The rule must define a communication protocol, a port number, and a destination location, such as a Droplet ID, IP address, or a tag. For example, the following rule defines that the firewall only allows traffic to be sent to port 22 of any IPv4 address on the internet: protocol:tcp,ports:22,address:0.0.0.0/0.
#                                                                    
#                                                                    Available destination keys are: `address`, `droplet_id`, `load_balancer_uid`, `kubernetes_id`, and `tag`. 
#                                                                    
#                                                                    Use a quoted string of space-separated values for multiple rules.
#       --tag-names frontend,backend                                 A comma-separated list of existing tags, for example: frontend,backend. Droplets with these tags will be placed behind the cloud firewall
# 
# Global Flags:
#   -t, --access-token string   API V2 access token
#   -u, --api-url string        Override default API endpoint
#   -c, --config string         Specify a custom config file (default "C:\\Users\\Lenovo\\AppData\\Roaming\\doctl\\config.yaml")
#       --context string        Specify a custom authentication context name
#       --http-retry-max int    Set maximum number of retries for requests that fail with a 429 or 500-level error (default 5)
#       --interactive           Enable interactive behavior. Defaults to true if the terminal supports it (default false)
#   -o, --output string         Desired output format [text|json] (default "text")
#       --trace                 Show a log of network activity while performing a command
#   -v, --verbose               Enable verbose output
# 
type: layout-form
header: 
  - type: header
    title: doctl compute firewall create
    logo: icon.webp
form:
  - type: section
    subitems:
      - type: row
        subitems: 
          - type: textfield
            name: name (required)
            description: The firewall's name
            produces: 
              - variable: name
      - type: row
        subitems: 
          - type: checkbox
            name: droplet-ids
            description: "A comma-separated list of Droplet IDs to place behind the cloud firewall, for example: 386734086,391669331"
            val-false: undefined
            produces: 
              - variable: droplet_ids
      - type: row
        subitems: 
          - type: dropdown
            name: format
            description: "Columns for output in a comma-separated list. Possible values: ID, `Name`, `Status`, `Created`, `InboundRules`, `OutboundRules`, `DropletIDs`, `Tags`, `PendingChanges`."
            items:
              - ID
              - Name
              - Status
              - Created
              - InboundRules
              - OutboundRules
              - DropletIDs
              - Tags
              - PendingChanges
            produces: 
              - variable: format
      - type: row
        subitems: 
          - type: checkbox
            name: inbound-rules
            description: "A comma-separated key-value list that defines an inbound rule. The rule must define a communication protocol, a port number, and a traffic source location, such as a Droplet ID, IP address, or a tag. For example, the following rule defines that resources can only receive TCP traffic on port 22 from addresses in the specified CIDR: protocol:tcp,ports:22,address:192.0.2.0/24.  Available source keys are: `address`, `droplet_id`, `load_balancer_uid`, `kubernetes_id`, and `tag`.  Use a quoted string of space-separated values for multiple rules."
            val-false: undefined
            produces: 
              - variable: inbound_rules
      - type: row
        subitems: 
          - type: checkbox
            name: no-header
            description: Return raw data with no headers
            val-false: undefined
            produces: 
              - variable: no_header
      - type: row
        subitems: 
          - type: checkbox
            name: outbound-rules
            description: "A comma-separate key-value list that defines an outbound rule. The rule must define a communication protocol, a port number, and a destination location, such as a Droplet ID, IP address, or a tag. For example, the following rule defines that the firewall only allows traffic to be sent to port 22 of any IPv4 address on the internet: protocol:tcp,ports:22,address:0.0.0.0/0.  Available destination keys are: `address`, `droplet_id`, `load_balancer_uid`, `kubernetes_id`, and `tag`.  Use a quoted string of space-separated values for multiple rules."
            val-false: undefined
            produces: 
              - variable: outbound_rules
      - type: row
        subitems: 
          - type: checkbox
            name: tag-names
            description: "A comma-separated list of existing tags, for example: frontend,backend. Droplets with these tags will be placed behind the cloud firewall  lobal Flags:"
            val-false: undefined
            produces: 
              - variable: tag_names
      - type: row
        subitems: 
          - type: textfield
            name: access-token
            description: API V2 access token
            produces: 
              - variable: access_token
      - type: row
        subitems: 
          - type: textfield
            name: api-url
            description: Override default API endpoint
            produces: 
              - variable: api_url
      - type: row
        subitems: 
          - type: textfield
            name: config
            description: "Specify a custom config file (default \"C:\\Users\\Lenovo\\AppData\\Roaming\\doctl\\config.yaml\")"
            produces: 
              - variable: config
      - type: row
        subitems: 
          - type: textfield
            name: context
            description: Specify a custom authentication context name
            produces: 
              - variable: context
      - type: row
        subitems: 
          - type: textfield
            name: http-retry-max
            description: Set maximum number of retries for requests that fail with a 429 or 500-level error (default 5)
            produces: 
              - variable: http_retry_max
      - type: row
        subitems: 
          - type: checkbox
            name: interactive
            description: Enable interactive behavior. Defaults to true if the terminal supports it (default false)
            val-false: undefined
            produces: 
              - variable: interactive
      - type: row
        subitems: 
          - type: textfield
            name: output
            description: Desired output format [text|json] (default "text")
            produces: 
              - variable: output
      - type: row
        subitems: 
          - type: checkbox
            name: trace
            description: Show a log of network activity while performing a command
            val-false: undefined
            produces: 
              - variable: trace
      - type: row
        subitems: 
          - type: checkbox
            name: verbose
            description: Enable verbose output 
            val-false: undefined
            produces: 
              - variable: verbose
      - type: 'action-row'
        expandable: false
        name: doctl compute firewall create
        consumes:
          - variable: name
            parameter: --name
            required: true
          - variable: droplet_ids
            parameter: --droplet-ids
            required: false
          - variable: format
            parameter: --format
            required: false
          - variable: inbound_rules
            parameter: --inbound-rules
            required: false
          - variable: no_header
            parameter: --no-header
            required: false
          - variable: outbound_rules
            parameter: --outbound-rules
            required: false
          - variable: tag_names
            parameter: --tag-names
            required: false
          - variable: access_token
            parameter: --access-token
            required: false
          - variable: api_url
            parameter: --api-url
            required: false
          - variable: config
            parameter: --config
            required: false
          - variable: context
            parameter: --context
            required: false
          - variable: http_retry_max
            parameter: --http-retry-max
            required: false
          - variable: interactive
            parameter: --interactive
            required: false
          - variable: output
            parameter: --output
            required: false
          - variable: trace
            parameter: --trace
            required: false
          - variable: verbose
            parameter: --verbose
            required: false
        install: doctl compute firewall create
        produces:
          - variable: output
      - type: 'output-row'
        data: output
        content: ...