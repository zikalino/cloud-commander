#--------------------------------------------------------------------------------------------------------------
# Autogenerated by SmarterGen - do not modify this file.
#--------------------------------------------------------------------------------------------------------------
# linode-cli nodebalancers create
# Create a NodeBalancer
# API Documentation: 
# https://techdocs.akamai.com/linode-api/reference/post-node-balancer
# 
# Example Usage: 
#   linode-cli nodebalancers create \
#     --region us-east \
#     --label balancer12345 \
#     --client_conn_throttle 0
# 
# Arguments:
#   --region (required): The ID of the Region to create this NodeBalancer in.
# 
#   --client_conn_throttle: Throttle connections per second.
#   --firewall_id: The ID of the Firewall to assign to the NodeBalancer.
#   --label: This NodeBalancer's label.
#   --tags: An array of Tags applied to this object.
# 
#   --configs (JSON, conflicts with children): A request object representing a   
#   NodeBalancer Config, including Nodes.                                        
#     --configs.algorithm: What algorithm this NodeBalancer should use for       
#     routing traffic to backends.                                               
#     --configs.check: The type of check to perform against backends to ensure   
#     they are serving requests.                                                 
#     --configs.check_attempts: How many times to attempt a check before         
#     considering a backend to be down.                                          
#     --configs.check_body: This value must be present in the response body of   
#     the check in order for it to pass.                                         
#     --configs.check_interval: How often, in seconds, to check that backends are
#     up and serving requests.                                                   
#     --configs.check_passive: If true, any response from this backend with a 5xx
#     status code will be enough for it to be considered unhealthy and taken out 
#     of rotation.                                                               
#     --configs.check_path: The URL path to check on each backend.
#     --configs.check_timeout: How long, in seconds, to wait for a check attempt 
#     before considering it failed.                                              
#     --configs.cipher_suite: What ciphers to use for SSL connections served by  
#     this NodeBalancer.                                                         
#     --configs.nodes (JSON, conflicts with children): A NodeBalancerNode        
#     represents a single backend serving requests for a single port of a        
#     NodeBalancer.                                                              
#     --configs.port: The port this Config is for.
#     --configs.protocol: The protocol this port is configured to serve.
#     --configs.proxy_protocol: ProxyProtocol is a TCP extension that sends      
#     initial TCP connection information such as source/destination IPs and ports
#     to backend devices.                                                        
#     --configs.ssl_cert (nullable): The PEM-formatted public SSL certificate (or
#     the combined PEM-formatted SSL certificate and Certificate Authority chain)
#     that should be served on this NodeBalancerConfig's port.                   
#     --configs.ssl_key (nullable): The PEM-formatted private key for the SSL    
#     certificate set in the ssl_cert field.                                     
#     --configs.stickiness: Controls how session stickiness is handled on this   
#     port.                                                                      
#       --configs.nodes.address: The private IP Address where this backend can be
#       reached.                                                                 
#       --configs.nodes.label: The label for this node.
#       --configs.nodes.mode: The mode this NodeBalancer should use when sending 
#       traffic to this backend.                                                 
#       --configs.nodes.weight: Used when picking a backend to serve a request   
#       and is not pinned to a single backend yet.                               
# 
# 
type: layout-form
header: 
  - type: header
    title: linode nodebalancers create
    logo: icon.webp
form:
  - type: fieldset
    subitems:
      - type: row
        subitems: 
          - type: textfield
            name: region (required)
            description: The ID of the Region to create this NodeBalancer in. 
            produces: 
              - variable: region
      - type: row
        subitems: 
          - type: textfield
            name: client_conn_throttle
            description: Throttle connections per second.
            produces: 
              - variable: client_conn_throttle
      - type: row
        subitems: 
          - type: textfield
            name: firewall_id
            description: The ID of the Firewall to assign to the NodeBalancer.
            produces: 
              - variable: firewall_id
      - type: row
        subitems: 
          - type: textfield
            name: label
            description: This NodeBalancer's label.
            produces: 
              - variable: label
      - $include: __az_tags_list.yaml
      - type: row
        subitems: 
          - type: textfield
            name: configs
            description: A request object representing a NodeBalancer Config, including Nodes.
            produces: 
              - variable: configs
      - type: row
        subitems: 
          - type: textfield
            name: configs.algorithm
            description: What algorithm this NodeBalancer should use for routing traffic to backends.
            produces: 
              - variable: configs.algorithm
      - type: row
        subitems: 
          - type: textfield
            name: configs.check
            description: The type of check to perform against backends to ensure they are serving requests.
            produces: 
              - variable: configs.check
      - type: row
        subitems: 
          - type: textfield
            name: configs.check_attempts
            description: How many times to attempt a check before considering a backend to be down.
            produces: 
              - variable: configs.check_attempts
      - type: row
        subitems: 
          - type: textfield
            name: configs.check_body
            description: This value must be present in the response body of the check in order for it to pass.
            produces: 
              - variable: configs.check_body
      - type: row
        subitems: 
          - type: textfield
            name: configs.check_interval
            description: How often, in seconds, to check that backends are up and serving requests.
            produces: 
              - variable: configs.check_interval
      - type: row
        subitems: 
          - type: textfield
            name: configs.check_passive
            description: If true, any response from this backend with a 5xx status code will be enough for it to be considered unhealthy and taken out of rotation.
            produces: 
              - variable: configs.check_passive
      - type: row
        subitems: 
          - type: textfield
            name: configs.check_path
            description: The URL path to check on each backend.
            produces: 
              - variable: configs.check_path
      - type: row
        subitems: 
          - type: textfield
            name: configs.check_timeout
            description: How long, in seconds, to wait for a check attempt before considering it failed.
            produces: 
              - variable: configs.check_timeout
      - type: row
        subitems: 
          - type: textfield
            name: configs.cipher_suite
            description: What ciphers to use for SSL connections served by this NodeBalancer.
            produces: 
              - variable: configs.cipher_suite
      - type: row
        subitems: 
          - type: textfield
            name: configs.nodes
            description: A NodeBalancerNode represents a single backend serving requests for a single port of a NodeBalancer.
            produces: 
              - variable: configs.nodes
      - type: row
        subitems: 
          - type: textfield
            name: configs.port
            description: The port this Config is for.
            produces: 
              - variable: configs.port
      - type: row
        subitems: 
          - type: textfield
            name: configs.protocol
            description: The protocol this port is configured to serve.
            produces: 
              - variable: configs.protocol
      - type: row
        subitems: 
          - type: textfield
            name: configs.proxy_protocol
            description: ProxyProtocol is a TCP extension that sends initial TCP connection information such as source/destination IPs and ports to backend devices.
            produces: 
              - variable: configs.proxy_protocol
      - type: row
        subitems: 
          - type: textfield
            name: configs.ssl_cert
            description: The PEM-formatted public SSL certificate (or the combined PEM-formatted SSL certificate and Certificate Authority chain) that should be served on this NodeBalancerConfig's port.
            produces: 
              - variable: configs.ssl_cert
      - type: row
        subitems: 
          - type: textfield
            name: configs.ssl_key
            description: The PEM-formatted private key for the SSL certificate set in the ssl_cert field.
            produces: 
              - variable: configs.ssl_key
      - type: row
        subitems: 
          - type: textfield
            name: configs.stickiness
            description: Controls how session stickiness is handled on this port.
            produces: 
              - variable: configs.stickiness
      - type: row
        subitems: 
          - type: textfield
            name: configs.nodes.address
            description: The private IP Address where this backend can be reached.
            produces: 
              - variable: configs.nodes.address
      - type: row
        subitems: 
          - type: textfield
            name: configs.nodes.label
            description: The label for this node.
            produces: 
              - variable: configs.nodes.label
      - type: row
        subitems: 
          - type: textfield
            name: configs.nodes.mode
            description: The mode this NodeBalancer should use when sending traffic to this backend.
            produces: 
              - variable: configs.nodes.mode
      - type: row
        subitems: 
          - type: textfield
            name: configs.nodes.weight
            description: Used when picking a backend to serve a request and is not pinned to a single backend yet.  
            produces: 
              - variable: configs.nodes.weight
      - type: 'action-row'
        expandable: false
        name: linode nodebalancers create
        consumes:
          - variable: region
            parameter: --region
            required: true
          - variable: client_conn_throttle
            parameter: --client_conn_throttle
            required: false
          - variable: firewall_id
            parameter: --firewall_id
            required: false
          - variable: label
            parameter: --label
            required: false
          - variable: tags
            parameter: --tags
            required: false
          - variable: configs
            parameter: --configs
            required: false
          - variable: configs.algorithm
            parameter: --configs.algorithm
            required: false
          - variable: configs.check
            parameter: --configs.check
            required: false
          - variable: configs.check_attempts
            parameter: --configs.check_attempts
            required: false
          - variable: configs.check_body
            parameter: --configs.check_body
            required: false
          - variable: configs.check_interval
            parameter: --configs.check_interval
            required: false
          - variable: configs.check_passive
            parameter: --configs.check_passive
            required: false
          - variable: configs.check_path
            parameter: --configs.check_path
            required: false
          - variable: configs.check_timeout
            parameter: --configs.check_timeout
            required: false
          - variable: configs.cipher_suite
            parameter: --configs.cipher_suite
            required: false
          - variable: configs.nodes
            parameter: --configs.nodes
            required: false
          - variable: configs.port
            parameter: --configs.port
            required: false
          - variable: configs.protocol
            parameter: --configs.protocol
            required: false
          - variable: configs.proxy_protocol
            parameter: --configs.proxy_protocol
            required: false
          - variable: configs.ssl_cert
            parameter: --configs.ssl_cert
            required: false
          - variable: configs.ssl_key
            parameter: --configs.ssl_key
            required: false
          - variable: configs.stickiness
            parameter: --configs.stickiness
            required: false
          - variable: configs.nodes.address
            parameter: --configs.nodes.address
            required: false
          - variable: configs.nodes.label
            parameter: --configs.nodes.label
            required: false
          - variable: configs.nodes.mode
            parameter: --configs.nodes.mode
            required: false
          - variable: configs.nodes.weight
            parameter: --configs.nodes.weight
            required: false
        install: linode nodebalancers create
        produces:
          - variable: output
      - type: 'output-row'
        data: output
        content: ...