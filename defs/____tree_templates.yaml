item-sources:
  - $include: az/____tree_item_children_sources.yaml
  - $include: civo/____tree_item_children_sources.yaml
  - $include: doctl/____tree_item_children_sources.yaml
  - $include: kamatera/____tree_item_children_sources.yaml
  - $include: linode/____tree_item_children_sources.yaml
  - $include: upctl/____tree_item_children_sources.yaml

detail-sources:
  - $include: az/____tree_item_detail_sources.yaml
  - $include: civo/____tree_item_detail_sources.yaml
  - $include: doctl/____tree_item_detail_sources.yaml
  - $include: linode/____tree_item_detail_sources.yaml
  - $include: upctl/____tree_item_detail_sources.yaml


extractors:

  - item-types: "Microsoft.Compute/virtualMachines"
    fields:
      state:
        path: "$.instanceView.statuses[?(@.code < 'ProvisioningState')].code"
        map:
          "PowerState/running": started
          "PowerState/stopped": stopped
      size:
        path: "$.hardwareProfile.vmSize"
      size_disk:
        path: "$.storageProfile.osDisk.diskSizeGb"
      location:
        path: "$.location"

  - item-types: civo-instance
    fields:
      location:
        path: "$.region"
      state:
        path: "$.status"
        map:
          ACTIVE: started
          off: stopped
      size:
        path: "$.size"
      size_cores:
        path: "$.cpu_cores"
      size_memory:
        path: "$.ram_mb"
      size_disk:
        path: "$.disk_gb"
      price:
        path: "$.price_monthly"
      image:
        path: "$.diskimage_id"

  - item-types: doctl-droplet
    fields:
      state:
        path: "$[0].status"
        map:
          active: started
          off: stopped
      size:
        path: "$[0].size.slug"
      location:
        path: "$[0].region.slug"
      size_cores:
        path: "$[0].size.vcpus"
      size_memory:
        path: "$[0].size.memory"
      size_disk:
        path: "$[0].size.disk"
      price:
        path: "$[0].size.price_monthly"
      image:
        path: "$[0].image.slug"

  - item-types: linode-linode
    fields:
      state:
        path: "$[0].status"
        map:
          running: started
          offline: stopped
          provisioning: provisioning
      size:
        path: "$[0].type"
      location:
        path: "$[0].region"
      size_cores:
        path: "$[0].specs.vcpus"
      size_memory:
        path: "$[0].specs.memory"
      size_disk:
        path: "$[0].specs.disk"
      image:
        path: "$[0].image"

  - item-types: upctl-server
    fields:
      state:
        path: "$.state"
      size:
        path: "$.plan"
      location:
        path: "$.zone"
      size_cores:
        path: "$.core_number"
      size_memory:
        path: "$.memory_amount"
      size_disk:
        path: "$[0].specs.disk"
      image:
        path: "$[0].image"


operations:
  #
  # Generic
  #
  - type: create
    item-types: generic
    name: Create Virtual Machine
    template:
      name: generic/generic_vm_create
  - type: create
    item-types: generic
    name: Create Container Registry
    template:
      name: generic/generic_container_registry_create
  - type: create
    item-types: generic
    name: Create Container Instance
    template:
      name: generic/generic_container_instance_create
  - type: create
    item-types: generic
    name: Create Kubernetes Cluster
    template:
      name: generic/generic_kubernetes_cluster_create
  - type: create
    item-types: generic
    name: Deploy Application
    template:
      name: generic/generic_deploy_application


  #
  # az
  #
  - type: create
    item-types: az-group
    name: Create Resource Group
    template: az_group_create
  - type: create
    item-types: 
      - vm
    name: Create Virtual Machine
    template:
      name: generic/generic_vm_create
      parameters:
        cloud_provider: cloud-az
  - type: create
    item-types: container-registry
    name: Create Container Registry
    template: az_acr_create
  # this is a template for resource group level
  - type: delete
    item-types: az-generic
    name: Delete
    cmd: az resource delete --ids ${id}
    refresh: parent
  - type: start
    item-types: az-vm
    name: Start
    cmd: az vm start --ids ${id}
    refresh: self
    when:
      path: "$.instanceView.statuses[?(@.code < 'ProvisioningState')].code"
      value: "PowerState/stopped"
  - type: stop
    item-types: az-vm
    name: Stop
    cmd: az vm stop --ids ${id}
    refresh: self
    when:
      path: "$.instanceView.statuses[?(@.code < 'ProvisioningState')].code"
      value: "PowerState/running"
  - type: restart
    item-types: az-vm
    name: Restart
    cmd: az vm restart --ids ${id}
    refresh: self
    when:
      path: "$.instanceView.statuses[?(@.code < 'ProvisioningState')].code"
      value: "PowerState/running"

  #
  # civo
  #
  - type: create
    item-types: civo-instance
    name: Create Instance
    template:
      name: generic/generic_vm_create
      parameters:
        cloud_provider: cloud-civo
  - type: power-off
    item-types: civo-instance
    name: Power Off
    cmd: civo instance stop ${id}

  - type: create
    item-types: civo-kubernetes
    name: Create Kubernetes Cluster
    template:
      name: generic/generic_kubernetes_cluster_create
      parameters:
        cloud_provider: cloud-civo

  #  - type: delete
  #    name: Delete
  #    cmd: doctl compute droplet delete ${id} --force
  #    refresh: parent
  #  - type: reboot
  #    name: Reboot
  #    cmd: doctl compute droplet-action reboot ${id}
  #    when:
  #      path: "$[0].status"
  #      value: active
  #    refresh: self
  #  - type: power-off
  #    name: Power off
  #    cmd: doctl compute droplet-action power-off ${id}
  #    when:
  #      path: "$[0].status"
  #      value: active
  #    refresh: self
  #  - type: power-on
  #    name: Power on
  #    cmd: doctl compute droplet-action power-on ${id}
  #    when:
  #      path: "$[0].status"
  #      value: off
  #    refresh: self
  #  - type: other
  #    name: Enable backups
  #    cmd: doctl compute droplet-action enable-backups ${id}
  #    refresh: self
  #    #when:
  #    #  path: "$[0].status"
  #    #  value: on
  #  - type: other
  #    name: Disable backups
  #    cmd: doctl compute droplet-action disable-backups ${id}
  #    refresh: self
  #    #when:
  #    #  path: "$[0].status"
  #    #  value: off

  - type: delete
    item-types: civo-kubernetes
    name: Delete
    cmd: civo kubernetes delete ${name} --region fra1
    refresh: parent
  # This is copied from level below, but is exactly the same

  #
  # doctl
  # 

  - type: create
    item-types: doctl-droplet
    name: Create Droplet
    template:
      name: generic/generic_vm_create
      parameters:
        cloud_provider: cloud-doctl

  - type: delete
    item-types: doctl-droplet
    name: Delete
    cmd: doctl compute droplet delete ${id} --force
    refresh: parent
  - type: reboot
    item-types: doctl-droplet
    name: Reboot
    cmd: doctl compute droplet-action reboot ${id}
    when:
      path: "$[0].status"
      value: active
    refresh: self
  - type: power-off
    item-types: doctl-droplet
    name: Power off
    cmd: doctl compute droplet-action power-off ${id}
    when:
      path: "$[0].status"
      value: active
    refresh: self
  - type: power-on
    item-types: doctl-droplet
    name: Power on
    cmd: doctl compute droplet-action power-on ${id}
    when:
      path: "$[0].status"
      value: off
    refresh: self
  - type: other
    item-types: doctl-droplet
    name: Enable backups
    cmd: doctl compute droplet-action enable-backups ${id}
    refresh: self
    #when:
    #  path: "$[0].status"
    #  value: on
  - type: other
    item-types: doctl-droplet
    name: Disable backups
    cmd: doctl compute droplet-action disable-backups ${id}
    refresh: self
    #when:
    #  path: "$[0].status"
    #  value: off

  - type: create
    item-types: doctl-volume
    name: Create Volume
    template: doctl_compute_volume_create
  - type: delete
    item-types: doctl-volume
    name: Delete
    cmd: doctl compute volume delete ${id} --force
    refresh: parent
  - type: other
    item-types: doctl-volume
    name: Resize
    cmd: doctl compute volume-action resize ${id}
    refresh: self
  - type: other
    item-types: doctl-volume
    name: Attach
    cmd: doctl compute volume-action attach ${id}
    refresh: self
  - type: other
    item-types: doctl-volume
    name: Detach
    cmd: doctl compute volume-action detach ${id}
    refresh: self
  - type: create
    item-types: doctl-kubernetes
    name: Create Kubernetes Cluster
    template: doctl_kubernetes_cluster_create
  - type: delete
    item-types: doctl-kubernetes
    name: Delete
    cmd: doctl kubernetes cluster delete ${id} --force
    refresh: parent
  - type: create
    item-types: doctl-database
    name: Create Database
    template: doctl_databases_create
  - type: delete
    item-types: doctl-database
    name: Delete
    cmd: doctl databases delete ${id} --force
    refresh: parent
  - type: create
    item-types: doctl-firewall
    name: Create Firewall
    template: doctl_compute_firewall_create
  - type: delete
    item-types: doctl-firewall
    name: Delete
    cmd: doctl compute firewall delete ${id}
    refresh: parent
  - type: create
    item-types: doctl-containerregistry
    name: Create Container Registry
    template: doctl_registry_create
  - type: delete
    item-types: doctl-containerregistry
    name: Delete
    cmd: doctl registry delete ${id}
    refresh: parent


  #
  # linode
  #
  - type: create
    item-types: linode-linode
    name: Create Linode (Virtual Machine)
    template:
      name: generic/generic_vm_create
      parameters:
        cloud_provider: cloud-linode
  - type: create
    item-types: linode-volume
    name: Create Volume
    template: linode_volumes_create
  - type: delete
    item-types: linode-linode
    name: Delete
    cmd: linode linodes delete ${id}
    refresh: parent
  - type: reboot
    item-types: linode-linode
    name: Reboot
    cmd: linode linodes reboot ${id}
    when:
      path: "$[0].status"
      value: running
    refresh: self
  - type: rebuild
    item-types: linode-linode
    name: Rebuild
    cmd: linode linodes rebuild ${id}
  - type: power-off
    item-types: linode-linode
    name: Power off
    cmd: linode linodes shutdown ${id}
    when:
      path: "$[0].status"
      value: running
    refresh: self
  - type: power-on
    item-types: linode-linode
    name: Power on
    cmd: linode linodes boot ${id}
    when:
      path: "$[0].status"
      value: offline
    refresh: self
  - type: other
    item-types: linode-linode
    name: Enable backups
    cmd: linode linodes backups-enable ${id}
    when:
      path: "$[0].backups.enabled"
      value: false
    refresh: self
  - type: other
    item-types: linode-linode
    name: Enable backups
    cmd: linode linodes backups-cancel ${id}
    when:
      path: "$[0].backups.enabled"
      value: true
    refresh: self
  - type: other
    item-types: linode-linode
    name: Update
    cmd: linode linodes update ${id}
  - type: other
    item-types: linode-linode
    name: Upgrade
    cmd: linode linodes upgrade ${id}
  - type: other
    item-types: linode-linode
    name: Snapshot
    cmd: linode linodes snapshot ${id}
  - type: other
    item-types: linode-linode
    name: Resize
    cmd: linode linodes resize ${id}
  - type: other
    item-types: linode-linode
    name: Rescue
    cmd: linode linodes rescue ${id}
  - type: other
    item-types: linode-linode
    name: Clone
    cmd: linode linodes clone ${id}
  - type: create
    item-types: linode-loadbalancer
    name: Create Node Balancer
    template: linode_nodebalancers_create
  - type: delete
    item-types: linode-loadbalancer
    name: Delete
    cmd: linode nodebalancers delete ${id}
    refresh: parent
  - type: create
    item-types: linode-firewall
    name: Create Firewall
    template: linode_firewalls_create
  - type: delete
    item-types: linode-firewall
    name: Delete
    cmd: linode firewalls delete ${id}
    refresh: parent
  - type: delete
    item-types: linode-volume
    name: Delete
    cmd: linode volumes delete ${id}
    refresh: parent


  #
  # upctl
  #

  - type: create
    item-types: upctl-server
    name: Create Server
    template:
      name: generic/generic_vm_create
      parameters:
        cloud_provider: cloud-upctl
  - type: delete
    item-types: upctl-server
    name: Delete
    cmd: upctl server delete ${id}
    refresh: parent
    when:
      path: state
      value: stopped
  - type: start
    item-types: upctl-server
    name: Start
    cmd: upctl server start ${id}
    refresh: self
    when:
      path: state
      value: stopped
  - type: stop
    item-types: upctl-server
    name: Stop
    cmd: upctl server stop ${id} --wait
    refresh: self
    when:
      path: state
      value: started
  - type: restart
    item-types: upctl-server
    name: Restart
    cmd: upctl server restart ${id}
    refresh: self
    when:
      path: state
      value: started
  - type: create
    item-types: upctl-server
    name: Create Storage
    template: upctl_storage_create
  - type: delete
    item-types: upctl-storage
    name: Delete
    cmd: upctl storage delete ${id}
    refresh: parent
  - type: create
    item-types: upctl-servergroup
    name: Create Server Group
    template: upctl_servergroup_create
  - type: delete
    item-types: upctl-servergroup
    name: Delete
    cmd: upctl servergroup delete ${id}
    refresh: parent
  - type: delete
    item-types: upctl-database
    name: Delete
    cmd: upctl database delete ${id}
    refresh: parent
  - type: delete
    item-types: upctl-gateway
    name: Delete
    cmd: upctl gateway delete ${id}
    refresh: parent
  - type: delete
    item-types: upctl-ipaddress
    name: Delete
    cmd: upctl ip-address remove ${id}
    refresh: parent
  - type: create
    item-types: upctl-kubernetes
    name: Create Kubernetes Cluster
    template: upctl_kubernetes_create
  - type: delete
    item-types: upctl-kubernetes
    name: Delete
    cmd: upctl kubernetes delete ${id}
    refresh: parent
  - type: delete
    item-types: upctl-host
    name: Delete
    cmd: upctl host delete ${id}
    refresh: parent
  - type: delete
    item-types: upctl-loadbalancer
    name: Delete
    cmd: upctl loadbalancer delete ${id}
    refresh: parent
  - type: create
    item-types: upctl-network
    name: Create Network
    template: upctl_network_create
  - type: delete
    item-types: upctl-network
    name: Delete
    cmd: upctl network delete ${id}
    refresh: parent
    
  - type: delete
    item-types: upctl-peering
    name: Delete
    cmd: upctl networkpeering delete ${id}
    refresh: parent
  - type: delete
    item-types: upctl-objectstorage
    name: Delete
    cmd: upctl object-storage delete ${id}
    refresh: parent
  - type: create
    item-types: upctl-router
    name: Create Router
    template: upctl_router_create
  - type: delete
    item-types: upctl-router
    name: Delete
    cmd: upctl router delete ${id}
    refresh: parent

detail-templates:
  - item-types: '*'
    definition:
      type: section
      title: Basic Information
      subitems:
        - type: 'info-row'
          icon: 'codicon-symbol-field'
          color: 'black'
          label: 'ID'
          value: '${id}'
        - type: 'row'
          subitems: 
            - type: 'field'
              icon: 'codicon-symbol-string'
              color: 'black'
              label: 'Name:'
              value: '${name}'
            - type: 'field'
              icon: 'codicon-symbol-string'
              color: 'black'
              label: 'Type:'
              value: '${type}'
            - type: 'field'
              icon: 'codicon-location'
              color: 'black'
              label: 'Location:'
              value: '${location}'


  - item-types: vm
    definition:
      type: section
      title: Virtual Machine
      subitems:
        - type: row
          subitems:
            - type: field
              icon: icon-square-orange.png
              color: black
              label: 'State:'
              value: '${state}'
        - type: 'row'
          subitems:
            - type: field
              icon: icon-cores.png
              color: black
              label: 'Cores:'
              value: '${size_cores}'
            - type: field
              icon: 'icon-memory.png'
              color: black
              label: 'Memory:'
              value: '${size_memory}'
            - type: field
              icon: icon-storage.png
              color: black
              label: 'Disk Size:'
              value: '${size_disk}'
        - type: 'row'
          subitems:
            - type: info-row
              icon: codicon-file-binary
              color: black
              label: 'Image:'
              value: '${image}'
