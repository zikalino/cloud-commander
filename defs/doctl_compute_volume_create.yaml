#--------------------------------------------------------------------------------------------------------------
# Autogenerated by SmarterGen - do not modify this file.
#--------------------------------------------------------------------------------------------------------------
# Creates a block storage volume on your account.
# 
# You can use flags to specify the volume size, region, description, filesystem type, tags, and to create a volume from an existing volume snapshot.
# 
# Use the `doctl compute volume-action attach <volume-id> <droplet-id>` command to attach a new volume to a Droplet.
# 
# Usage:
#   doctl compute volume create <volume-name> [flags]
# 
# Aliases:
#   create, c
# 
# Examples:
# The following example creates a 4TiB volume named `example-volume` in the `nyc1` region. The command also applies two tags to the volume: doctl compute volume create example-volume --region nyc1 --size 4TiB --tag frontend,backend
# 
# Flags:
#       --desc string          A description of the volume
#       --format ID            Columns for output in a comma-separated list. Possible values: ID, `Name`, `Size`, `Region`, `Filesystem Type`, `Filesystem Label`, `DropletIDs`, `Tags`.
#       --fs-label string      The volume's filesystem label
#       --fs-type string       The volume's filesystem type: ext4 or xfs. If not specified, the volume is left unformatted
#   -h, --help                 help for create
#       --no-header            Return raw data with no headers
#       --region --snapshot    The volume's region. Not compatible with the --snapshot flag
#       --size string          Volume size (required) (default "4TiB")
#       --snapshot --region    Creates a volume from the specified snapshot ID. Not compatible with the --region flag
#       --tag --tag frontend   A comma-separated list of tags to apply to the volume. For example, --tag frontend or `--tag frontend,backend`
# 
# Global Flags:
#   -t, --access-token string   API V2 access token
#   -u, --api-url string        Override default API endpoint
#   -c, --config string         Specify a custom config file (default "C:\\Users\\Lenovo\\AppData\\Roaming\\doctl\\config.yaml")
#       --context string        Specify a custom authentication context name
#       --http-retry-max int    Set maximum number of retries for requests that fail with a 429 or 500-level error (default 5)
#       --interactive           Enable interactive behavior. Defaults to true if the terminal supports it (default false)
#   -o, --output string         Desired output format [text|json] (default "text")
#       --trace                 Show a log of network activity while performing a command
#   -v, --verbose               Enable verbose output
# 
type: layout-form
header: 
  - type: header
    title: doctl compute volume create
    logo: icon.webp
form:
  - type: fieldset
    subitems:
      - type: row
        subitems: 
          - type: textfield
            name: <volume_name> (required)
            description: volume-name
            produces: 
              - variable: volume_name
      - $include: doctl/__doctl_compute_region_list_selector.yaml
      - type: row
        subitems: 
          - type: textfield
            name: size (required)
            description: Volume size (default "4TiB")
            produces: 
              - variable: size
      - type: row
        subitems: 
          - type: textfield
            name: desc
            description: A description of the volume
            produces: 
              - variable: desc
      - type: row
        subitems: 
          - type: dropdown
            name: format
            description: "Columns for output in a comma-separated list. Possible values: ID, `Name`, `Size`, `Region`, `Filesystem Type`, `Filesystem Label`, `DropletIDs`, `Tags`."
            items:
              - ID
              - Name
              - Size
              - Region
              - Filesystem Type
              - Filesystem Label
              - DropletIDs
              - Tags
            produces: 
              - variable: format
      - type: row
        subitems: 
          - type: textfield
            name: fs-label
            description: The volume's filesystem label
            produces: 
              - variable: fs_label
      - type: row
        subitems: 
          - type: textfield
            name: fs-type
            description: "The volume's filesystem type: ext4 or xfs. If not specified, the volume is left unformatted"
            produces: 
              - variable: fs_type
      - type: row
        subitems: 
          - type: checkbox
            name: no-header
            description: Return raw data with no headers
            val-false: undefined
            produces: 
              - variable: no_header
      - type: row
        subitems: 
          - type: checkbox
            name: snapshot
            description: Creates a volume from the specified snapshot ID. Not compatible with the --region flag
            val-false: undefined
            produces: 
              - variable: snapshot
      - type: row
        subitems: 
          - type: checkbox
            name: tag
            description: A comma-separated list of tags to apply to the volume. For example, --tag frontend or `--tag frontend,backend` 
            val-false: undefined
            produces: 
              - variable: tag
      - type: 'action-row'
        expandable: false
        name: doctl compute volume create
        consumes:
          - variable: volume_name
            required: true
          - variable: region
            parameter: --region
            required: true
          - variable: size
            parameter: --size
            required: true
          - variable: desc
            parameter: --desc
            required: false
          - variable: format
            parameter: --format
            required: false
          - variable: fs_label
            parameter: --fs-label
            required: false
          - variable: fs_type
            parameter: --fs-type
            required: false
          - variable: no_header
            parameter: --no-header
            required: false
          - variable: snapshot
            parameter: --snapshot
            required: false
          - variable: tag
            parameter: --tag
            required: false
        install: doctl compute volume create ${volume_name}
        produces:
          - variable: output
      - type: 'output-row'
        data: output
        content: ...