- name: Digital Ocean
  id: cloud-digital-ocean
  icon: digital-ocean.svg
  subitems:
    - name: Droplets
      id: cloud-digital-ocean-droplets
      icon: digital-ocean.svg
      subitems: []
      raw: {}
      query: doctl compute droplet list --output json
      path-id: $[::].id
      path-name: $[::].name
      path-raw: $[::]
      operations:
        - type: create
          name: Create Droplet
          template:
            name: generic_vm_create
            parameters:
              cloud_provider: cloud-doctl

      child-template:
        - type: query-details
          query: doctl compute droplet get ${id} -o json
          refresh: self
          extract:
            - field: state
              path: "$[0].status"
              map:
                active: started
                off: stopped
            - field: size
              path: "$[0].size.slug"
            - field: location
              path: "$[0].region.slug"
            - field: size_cores
              path: "$[0].size.vcpus"
            - field: size_memory
              path: "$[0].size.memory"
            - field: size_disk
              path: "$[0].size.disk"
            - field: price
              path: "$[0].size.price_monthly"
            - field: image
              path: "$[0].image.slug"
        - type: delete
          name: Delete
          cmd: doctl compute droplet delete ${id} --force
          refresh: parent
        - type: reboot
          name: Reboot
          cmd: doctl compute droplet-action reboot ${id}
          when:
            path: "$[0].status"
            value: active
          refresh: self
        - type: power-off
          name: Power off
          cmd: doctl compute droplet-action power-off ${id}
          when:
            path: "$[0].status"
            value: active
          refresh: self
        - type: power-on
          name: Power on
          cmd: doctl compute droplet-action power-on ${id}
          when:
            path: "$[0].status"
            value: off
          refresh: self
        - type: other
          name: Enable backups
          cmd: doctl compute droplet-action enable-backups ${id}
          refresh: self
          #when:
          #  path: "$[0].status"
          #  value: on
        - type: other
          name: Disable backups
          cmd: doctl compute droplet-action disable-backups ${id}
          refresh: self
          #when:
          #  path: "$[0].status"
          #  value: off
    - name: Volumes
      id: cloud-digital-ocean-volumes
      icon: digital-ocean.svg
      subitems: []
      raw: {}
      query: doctl compute volume list --output json
      path-id: $[::].id
      path-name: $[::].name
      path-raw: $[::]
      operations:
        - type: create
          name: Create Volume
          template: doctl_compute_volume_create
      child-template:
        - type: delete
          name: Delete
          cmd: doctl compute volume delete ${id} --force
          refresh: parent
        - type: other
          name: Resize
          cmd: doctl compute volume-action resize ${id}
          refresh: self
        - type: other
          name: Attach
          cmd: doctl compute volume-action attach ${id}
          refresh: self
        - type: other
          name: Detach
          cmd: doctl compute volume-action detach ${id}
          refresh: self
    - name: Kubernetes
      id: cloud-digital-ocean-kubernetes
      icon: digital-ocean.svg
      subitems: []
      raw: {}
      query: doctl kubernetes cluster list --output json
      path-id: $[::].id
      path-name: $[::].name
      path-raw: $[::]
      operations:
        - type: create
          name: Create Kubernetes Cluster
          template: doctl_kubernetes_cluster_create
      child-template:
        - type: delete
          name: Delete
          cmd: doctl kubernetes cluster delete ${id} --force
          refresh: parent

    - name: App Platform
      id: cloud-digital-ocean-app-platform
      icon: digital-ocean.svg
      subitems: []
      raw: {}
      query: doctl apps list --output json
      path-id: $[::].id
      path-name: $[::].spec_name
      path-raw: $[::]
    - name: Functions
      id: cloud-digital-ocean-functions
      icon: digital-ocean.svg
      subitems: []
      raw: {}
      query: doctl serverless functions list --output json
      path-id: $[::].id
      path-name: $[::].spec_name
      path-raw: $[::]
    - name: Databases
      id: cloud-digital-ocean-databases
      icon: digital-ocean.svg
      subitems: []
      raw: {}
      query: doctl databases list --output json
      path-id: $[::].id
      path-name: $[::].name
      path-raw: $[::]
      operations:
        - type: create
          name: Create Database
          template: doctl_databases_create
      child-template:
        - type: delete
          name: Delete
          cmd: doctl databases delete ${id} --force
          refresh: parent


    - name: Spaces Object Storage
      id: cloud-digital-ocean-spaces-object-storage
      icon: digital-ocean.svg
      subitems: []
      raw: {}
    - name: Domains/DNS
      id: cloud-digital-ocean-domains-dns
      icon: digital-ocean.svg
      subitems: []
      raw: {}
      query: doctl compute domain list --output json
      path-id: $[::].domain
      path-name: $[::].domain
      path-raw: $[::]
    - name: Cloud Firewalls
      id: cloud-digital-ocean-firewalls
      icon: digital-ocean.svg
      subitems: []
      raw: {}
      query: doctl compute firewall list --output json
      path-id: $[::].id
      path-name: $[::].name
      path-raw: $[::]
      operations:
        - type: create
          name: Create Firewall
          template: doctl_compute_firewall_create
      child-template:
        - type: delete
          name: Delete
          cmd: doctl compute firewall delete ${id}
          refresh: parent
    - name: Reserved IPs
      id: cloud-digital-ocean-reserved-ips
      icon: digital-ocean.svg
      subitems: []
      raw: {}
      query: doctl compute reserved-ip list --output json
      path-id: $[::].ip
      path-name: $[::].ip
      path-raw: $[::]
    - name: Load Balancers
      id: cloud-digital-ocean-load-balancers
      icon: digital-ocean.svg
      subitems: []
      raw: {}
      query: doctl compute load-balancer list --output json
      path-id: $[::].id
      path-name: $[::].name
      path-raw: $[::]
    - name: Container Registries
      id: cloud-digital-ocean-registries
      icon: digital-ocean.svg
      subitems: []
      raw: {}
      query: doctl registry list --output json
      path-id: $[::].id
      path-name: $[::].name
      path-raw: $[::]
      operations:
        - type: create
          name: Create Container Registry
          template: doctl_registry_create
      child-template:
        - type: delete
          name: Delete
          cmd: doctl registry delete ${id}
          refresh: parent
  raw: {}
  details: doctl/doctl__prerequisites.yaml
